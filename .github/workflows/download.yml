name: Download YouTube Video

run-name: Download ${{ github.event.inputs.format || 'video' }} from YouTube

on:
  workflow_dispatch:
    inputs:
      video_url:
        description: 'YouTube URL'
        required: true
        type: string
        default: 'https://www.youtube.com/watch?v=example'
      format:
        description: 'Download format'
        required: true
        type: choice
        options:
        - 'video'
        - 'audio (MP3)'
        default: 'video'
  push:
    paths:
      - video_url.txt
      - downloader.py
      - .github/workflows/download.yml

permissions:
  contents: write
  actions: write

jobs:
  download:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          
      - name: Install yt-dlp and ffmpeg
        run: |
          pip install yt-dlp
          sudo apt-get update
          sudo apt-get install -y ffmpeg
        
      - name: Create cookies file (if secret exists)
        run: |
          if [ -n "${{ secrets.YOUTUBE_COOKIES }}" ]; then
            echo "üç™ Creating cookies file from secret"
            echo "${{ secrets.YOUTUBE_COOKIES }}" > cookies.txt
          else
            echo "‚ö†Ô∏è No cookies secret found - download might fail"
          fi
        
      - name: Create video_url.txt from input
        run: |
          if [ "${{ github.event.inputs.video_url }}" != "" ]; then
            echo "üìù Creating video_url.txt from manual input"
            if [ "${{ github.event.inputs.format }}" = "audio (MP3)" ]; then
              echo "${{ github.event.inputs.video_url }} MP3" > video_url.txt
            else
              echo "${{ github.event.inputs.video_url }}" > video_url.txt
            fi
            echo "‚úÖ Created video_url.txt with content:"
            cat video_url.txt
          elif [ -f video_url.txt ]; then
            echo "‚úÖ Using existing video_url.txt file"
            echo "Content:"
            cat video_url.txt
          else
            echo "‚ùå No URL provided via input or file!"
            exit 1
          fi
          
      - name: Run downloader
        run: python downloader.py
        
      - name: Upload video as artifact
        uses: actions/upload-artifact@v4
        with:
          name: downloaded-${{ github.event.inputs.format == 'audio (MP3)' && 'audio' || 'video' }}-${{ github.run_number }}
          path: downloads/
          if-no-files-found: error
